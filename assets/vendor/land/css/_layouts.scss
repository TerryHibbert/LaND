@mixin layouts($mediaQueries, $firstLayoutIndex, $lastLayoutIndex) {
  /* BUILD LAYOUTS */
  $lastDone: false;

  $lastItem: $lastLayoutIndex;

  @for $i from $firstLayoutIndex through $lastItem {

    $la: nth($layouts, $i);

    $isLast: $i == $lastItem;

    $denomMax: nth($denominatorMax, $i);

    $invisibles: ();
    @for $j from 1 through $layoutCount {
      @if $j < $i {
        $layout: nth($layouts, $j);
        $selector: '.' + $layout;
        $invisibles: append($invisibles, $selector);
      } @else if $j > $i {
        $layout: nth($layouts, $j);
        $selector: '.' + $layout;
        $invisibles: append($invisibles, $selector);
      }
    }

    $invisibleSelectors: implode($invisibles, ', ');
    /* $invisibleSelectors #{$invisibleSelectors} */

    @if ($mediaQueries) {
      @media (min-width: #{nth($min, $i)}) {
        land-#{$la} {cue:none}

        #{$invisibleSelectors} { display: none;}

        .#{$la}, .#{$la} { display: initial; }
        .#{$la}-block, .#{$la}-block { display: block; }
        .#{$la}-inline, .#{$la}-inline { display: inline; }
        .#{$la}-none, .#{$la}-none { display: none; }

        .LaND-container {
          width: #{nth($containerMax, $i)};
        }

        @include colSizes($la, $denomMax);
        @include targetedProperties($la: $la);
      }

    } @else {

      land-#{$la} {cue:none}

      #{$invisibleSelectors} { display: none;}

      .#{$la}, .#{$la} { display: block; }
      .#{$la}-block, .#{$la}-block { display: block; }
      .#{$la}-inline, .#{$la}-inline { display: block; }
      .#{$la}-none, .#{$la}-none { display: none; }

      .LaND-container {
        width: #{nth($containerMax, $i)};
      }

      @include colSizes($la, $denomMax);
      @include targetedProperties($la: $la);
    }
  }
}

@mixin colSize($la, $numerator, $denominator) {
  .#{$la}-#{$numerator}-#{$denominator} {
    width: fraction_percent($numerator, $denominator);
  }
}

@mixin colSizes($la, $denomMax) {
  @for $i from 1 through $denomMax {
    @for $j from 1 through $i {
      @if $j <= $i {
        @include colSize(#{$la}, $j, $i);
      }
    }
  }
}

@mixin fixedWithFluid($la, $width) {
  .a-fixed-left.#{$la}-px#{$width},
  .a-fixed-right.#{$la}-px#{$width},
  .#{$la}-fixed-left.#{$la}-px#{$width},
  .#{$la}-fixed-right.#{$la}-px#{$width} {
    width: #{$width}px;
  }

  .a-fluid-left.#{$la}-px#{$width} .a-fluid,
  .#{$la}-fluid-left.#{$la}-px#{$width} .a-fluid,
  .a-fluid-left.#{$la}-px#{$width} .#{$la}-fluid,
  .#{$la}-fluid-left.#{$la}-px#{$width} .#{$la}-fluid {
    margin-right: #{$width}px;
  }

  .a-fluid-right.#{$la}-px#{$width} .a-fluid,
  .#{$la}-fluid-right.#{$la}-px#{$width} .a-fluid,
  .a-fluid-right.#{$la}-px#{$width} .#{$la}-fluid,
  .#{$la}-fluid-right.#{$la}-px#{$width} .#{$la}-fluid {
    margin-left: #{$width}px;
  }
}

@mixin borderBoxSizing() {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  *behavior: url('boxsizing.htc');
}

@mixin animate($duration, $properties) {
  transition-property: #{$properties};
  -webkit-transition-property: #{$properties};
  transition-duration: #{$transitionDuration};
  -webkit-transition-duration: #{$transitionDuration};
}

/* Layout targeted properties
================================================== */
@mixin targetedProperties($la) {

  .#{$la}-auto { width: auto; }

  .#{$la}-clear, .#{$la}-clear-left { clear: left; }
  .#{$la}-clear-right { clear: right; }
  .#{$la}-clear-both { clear: both; }
  .#{$la}-clear-none { clear: none; }

  .#{$la}-float-left { float: left; }
  .#{$la}-float-right { float: right; }
  .#{$la}-float-none { float: none; }

  .#{$la}-font-80 { font-size: 80%; }
  .#{$la}-font-100 { font-size: 100%; }
  .#{$la}-font-125 { font-size: 125%; }

  .#{$la}-opacity-100 { opacity: 0; }
  .#{$la}-opacity-75 { opacity: 0.75; }
  .#{$la}-opacity-50 { opacity: 0.5; }
  .#{$la}-opacity-25 { opacity: 0.25; }

  .#{$la}-overflow-visible { overflow: visible; }
  .#{$la}-overflow-scroll { overflow: scroll; }

  .#{$la}-text-center { text-align: center; }
  .#{$la}-text-right { text-align: right; }
  .#{$la}-text-left { text-align: left; }

  .#{$la}-weight-normal { font-weight: normal; }
  .#{$la}-weight-bold { font-weight: bold; }

  .#{$la}-ws-normal { white-space: normal; }
  .#{$la}-ws-nowrap { white-space: nowrap; }

  .#{$la}-no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }


  /* #Fixed with fluid columns
  ================================================== */

  .#{$la}-fluid-left .#{$la}-fluid-right .#{$la}-fluid { margin-right: 0}
  .#{$la}-fluid-right .#{$la}-fluid-left .#{$la}-fluid { margin-left: 0}

  .#{$la}-fluid-right {
    float: left;
    width: 100%;
  }
  .#{$la}-fluid-left {
    float: right;
    width: 100%;
  }

  .#{$la}-fixed-left,
  .#{$la}-fixed-right {
    background: #C8FC98;
  }
  .#{$la}-fixed-left {
    float: left;
    margin-left: -100%;
  }
  .#{$la}-fixed-right {
    float: right;
    margin-right: -100%;
  }

  $i:0;
  @each $fixedSize in $fixedSizes {
    @include fixedWithFluid($la: $la, $width: $fixedSize);
  }

  /* #Absolute positioning
  ================================================== */
  .#{$la}-absolute { position: absolute; }
  .#{$la}-static { position: static; }
  .#{$la}-fixed { position: fixed; }
  .#{$la}-relative { position: relative; }

  .#{$la}-left { left: 0; }
  .#{$la}-right { right: 0; }
  .#{$la}-top { top: 0; }
  .#{$la}-bottom { bottom: 0; }


  /* Depth
  ================================================== */

  .#{$la}-z9 { z-index: 9; }
  .#{$la}-z99 { z-index: 99; }
  .#{$la}-z999 { z-index: 999; }
  .#{$la}-z9999 { z-index: 9999; }
  .#{$la}-z99999 { z-index: 99999; }
  .#{$la}-z999999 { z-index: 999999; }

  .#{$la}-aspect-1-1 {
    &:after {
      padding-top: 100%;
      display: block;
      content: '';
    }
  }

  .#{$la}-aspect-2-1 {
    &:after {
      padding-top: 50%;
      display: block;
      content: '';
    }
  }

  .#{$la}-aspect-16-9 {
    &:after {
      padding-top: 56.25%; /*16:9 ratio*/
      display: block;
      content: '';
    }
  }

  .#{$la}-aspect-4-3 {
    &:after {
      padding-top: 75%; /*4:3 ratio*/
      display: block;
      content: '';
    }
  }


  /* Misc
  ================================================== */
  .#{$la}-cursor-pointer { cursor: pointer; }
  .#{$la}-full-height { height: 100%; }
  .#{$la}-display-table { display: table; }
  .#{$la}-cell-vertical-middle { display: table-cell; vertical-align: middle; float: none; }

  .#{$la}-v-center {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 100%;
    width: 100%;
    height: 100%;
    display: table;

    .#{$la}-v-center-content {
      display: table-cell;
      vertical-align: middle;
      text-align: center;

      width: 100%;
      height: 100%;
    }
  }


  /* Padding and margin
  ================================================== */

  @if $padColDefaultSize > 0 {
    /* $padColDefaultSize: #{$padColDefaultSize} */
    .col {
      padding: #{nth($padSizes, $padColDefaultSize)}px;
    }
  }

  .col.#{$la}-pad-0 { padding: 0; }
  .col.#{$la}-margin-0 { margin: 0; }

  .col.#{$la}-margin-auto { margin: auto; }

  $i:0;
  @each $padSize in $padSizes {
    $name: nth($padSizeNames, $i+1);

    .col.#{$la}-pad-#{$name} { padding: #{$padSize}px; }

    .col.#{$la}-margin-#{$name} { margin: #{$padSize}px; }

    $i:$i+1;
  }

  $i:0;
  @each $padSize in $padSizes {
    $name: nth($padSizeNames, $i+1);

    .col.#{$la}-pad-h-#{$name} { padding-left: #{$padSize}px; padding-right: #{$padSize}px; }
    .col.#{$la}-pad-v-#{$name} { padding-top: #{$padSize}px; padding-bottom: #{$padSize}px; }

    .col.#{$la}-margin-h-#{$name} { margin-left: #{$padSize}px; margin-right: #{$padSize}px; }
    .col.#{$la}-margin-v-#{$name} { margin-top: #{$padSize}px; margin-bottom: #{$padSize}px; }

    $i:$i+1;
  }

  $i:0;
  @each $padSize in $padSizes {
    $name: nth($padSizeNames, $i+1);
    .col.#{$la}-pad-t-#{$name} { padding-top: #{$padSize}px; }
    .col.#{$la}-pad-r-#{$name} { padding-right: #{$padSize}px; }
    .col.#{$la}-pad-b-#{$name} { padding-bottom: #{$padSize}px; }
    .col.#{$la}-pad-l-#{$name} { padding-left: #{$padSize}px; }

    .col.#{$la}-margin-t-#{$name} { margin-top: #{$padSize}px; }
    .col.#{$la}-margin-r-#{$name} { margin-right: #{$padSize}px; }
    .col.#{$la}-margin-b-#{$name} { margin-bottom: #{$padSize}px; }
    .col.#{$la}-margin-l-#{$name} { margin-left: #{$padSize}px; }

    $i:$i+1;
  }


  /* Borders
  ================================================== */

  $i:0;
  @each $borderSize in $borderSizes {
    .col.#{$la}-border-#{$i} { border-width: #{$borderSize}px; }

    $i:$i+1;
  }

  $i:0;
  @each $borderSize in $borderSizes {
    .col.#{$la}-border-v-#{$i} { border-top-width: #{$borderSize}px; border-bottom-width: #{$borderSize}px; }
    .col.#{$la}-border-h-#{$i} { border-right-width: #{$borderSize}px; border-left-width: #{$borderSize}px; }
    $i:$i+1;
  }

  $i:0;
  @each $borderSize in $borderSizes {
    .col.#{$la}-border-t-#{$i} { border-top-width: #{$borderSize}px; }
    .col.#{$la}-border-r-#{$i} { border-right-width: #{$borderSize}px; }
    .col.#{$la}-border-l-#{$i} { border-left-width: #{$borderSize}px; }
    .col.#{$la}-border-b-#{$i} { border-bottom-width: #{$borderSize}px; }
    $i:$i+1;
  }


  /* Image
  ================================================== */
  .col img.#{$la}-fill {
    display: block;
    height: auto;
    width: 100%;
  }
  .col img.#{$la}-fit {
    display: inline-block;
    height: auto;
    max-width: 100%;
  }
  .col img.#{$la}-auto {
    display: inline;
    height: auto;
    width: auto;
  }
}